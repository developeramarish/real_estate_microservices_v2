using System;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using Dapper;
using DC.Core.DataAccess.MySql;

namespace DC.Business.DataAccess.MySql.Extensions
{
	public static class DBConnectionExtension
	{
		// private const string AutoGeneratedId = "NewIdCreated";

		public static async Task<ulong> ExecuteInsertGetIdAsync(this IDbConnection connection, SQLBuilder insertSql, DynamicParameters parameters)
		{
			string statement = insertSql.ToStatement();

			//if (string.IsNullOrWhiteSpace(statement) || !statement.Contains(AutoGeneratedId))
			//	throw new ArgumentException("Statement without AutoGeneratedId");

			//if (!parameters.ParameterNames.Contains(AutoGeneratedId))
			//	parameters.Add(name: AutoGeneratedId, dbType: DbType.Int64, direction: ParameterDirection.Output);

			var returnedId = (ulong)await connection.ExecuteScalarAsync(statement, parameters).ConfigureAwait(false);

			return returnedId;
		}
	}
}